#! /bin/bash

# remove all the contents in submission and zip the whole dir

read -p 'Please enter target folder name: ' folder

DIR="$HOME/Desktop/$folder"
SUB="Submission attachment(s)"
FED="Feedback Attachment(s)"

# get rid of all the annoying .DS_Store files!
rm -rf $DIR/*/*/.DS_Store $DIR/*/.DS_Store

# the num of stu who sub-ed sth
load=$( find $DIR/*/"Submission attachment(s)" -maxdepth 0 \! -empty | wc -l )

bar="############################################################" # 60

clean() {
  n=1
  for item in *; do
    if [ -d "$item" ]; then
      # if [ "$(ls "$item"/"$SUB" | wc -l)" -ge 1 ]; then      
        rm -rf "$item"/"$SUB"/*
        cleanPro=$((n*100/load))
        printf "\r[%-${load}s] %3d%%" "${bar:0:++n}" $cleanPro
        sleep 0.1
    else
      # if not a dir, do nothing
      continue
    fi
  done
  echo
}

pack() {
  # compressing in the background
  zip -rq -9 "${folder}.zip" $folder &
  
  # delete all .DS_Store and __MACOSX
  # send stdout and stderror to null if either of them not found
  zip -dq "${folder}.zip" "*.DS_Store" &> /dev/null &
  zip -dq "${folder}.zip" "*__MACOSX*" &> /dev/null &

  # meanwhile wait 15s with a progress bar doing the countdown
  # 15s might be slightly shorter or longer than necessary
  # in a test for 118MB zip (which takes around 7.5s), it is far more than enough
  m=1
  while ((m<=50))
  do
    packPro=$((m*100/50))
    printf "\r[%-51s] %3d%%" "${bar:0:++m}" $packPro
    sleep 0.3
  done
  echo
}


# start processing
cd ${DIR}
printf "\e[0;33m%s\e[0m\n" "Start Cleaning Submitted Contents ..."
clean
printf "\e[0;32m%s\e[0m\n" "Cleaning DONE!"

cd $HOME/Desktop
echo
printf "\e[0;33m%s\e[0m\n" "Start Compressing ..."
pack
printf "\e[0;32m%s\e[0m\n" "Compressing DONE!"

unset empty load m n cleanPro packPro

